name: Publish Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Publish Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      # Updates the version in the package.json
      - name: Set package version
        uses: ZeWaka/set-node-package-version@v1
        with:
          version: ${{ steps.extract_version.outputs.version }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          outputFile: NEW_CHANGELOG

      - name: Prepend extension changelog
        run: |
          mv CHANGELOG.md OLD_CHANGELOG
          echo "# Version  ${{ steps.extract_version.outputs.version }}" >> CHANGELOG.md
          cat NEW_CHANGELOG >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat OLD_CHANGELOG >> CHANGELOG.md
          rm NEW_CHANGELOG
          rm OLD_CHANGELOG

      - name: Build project
        run: npm run compile

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Build & Release ${{ github.event.release.tag_name }}" || echo "No changes to commit"

      - name: Push changes
        uses: ad-m/github-push-action@master

      - name: Get new Git SHA
        id: get_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Update tag to latest commit
        run: |
          git tag -f ${{ github.event.release.tag_name }} ${{ steps.get_sha.outputs.sha }}
          git push origin ${{ github.event.release.tag_name }} --force

      - name: Update Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.event.release.tag_name }}
          CONTENT: ${{ steps.build_changelog.outputs.changelog }}
        run: |
          echo "$CONTENT" >> temp_changelog
          gh release edit $TAG_NAME --notes-file temp_changelog --draft=false

      - name: Publish to Open VSX Registry
        uses: HaaLeo/publish-vscode-extension@v2
        id: publishToOpenVSX
        with:
            pat: ${{ secrets.OPEN_VSX_TOKEN }}

      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v2
        with:
            pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
            registryUrl: https://marketplace.visualstudio.com
            extensionFile: ${{ steps.publishToOpenVSX.outputs.vsixPath }}

      - name: Add vsix to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.event.release.tag_name }}
          VSIX_PATH: ${{ steps.publishToOpenVSX.outputs.vsixPath }}
        run: |
          gh release upload $TAG_NAME $VSIX_PATH
